{"ast":null,"code":"var _jsxFileName = \"/root/wheel-of-fortune-fullstack-BianYi10/front/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './wof.jpg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport LoginForm from './LoginForm';\nimport PopupWindow from './PopupWindow';\nimport PopupScoreWindow from './PopupScoreWindow';\nimport HistoryScoreWindow from './HistoryScoreWindow';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Various state hooks for managing game and user data\n  const phrase = \"Have a great day\";\n  const [hiddenPhrase, setHiddenPhrase] = useState('');\n  const [inputLetter, setInputLetter] = useState('');\n  const [correctGuess, setCorrectGuess] = useState(false);\n  const [chanceLeft, setChanceLeft] = useState(5);\n  const [user, setUser] = useState(null);\n  const [userInfo, setUserInfo] = useState([]);\n  const [showGame, setShowGame] = useState(false);\n  const [showUserName, setShowUserName] = useState(false);\n  const [showChangeUserName, setShowChangeUserName] = useState(false);\n  const [showScore, setShowScore] = useState(false);\n  const [inputUserName, setInputUserName] = useState('');\n  const [userName, setUserName] = useState('');\n  const [score, setScore] = useState(0);\n  const [first, setFirst] = useState(false);\n\n  // Handles user login and sets the initial state\n  function handleLogin(user) {\n    setUser(user);\n    setFirst(true);\n  }\n\n  // Fetches user information by their Google ID\n  function findUserInfoByGoogleId() {\n    const url = `https://wheeloffortune-68830.ue.r.appspot.com/api/UserInfo/findUserInfoByGoogleId?googleId=${user.uid}`;\n    axios.get(url).then(response => {\n      setUserInfo(response.data);\n    }).catch(error => {\n      setShowUserName(true);\n      setShowGame(false);\n    });\n  }\n  ;\n\n  // Handles submission of the user name\n  function handleUserNameSubmit(event) {\n    event.preventDefault();\n    const postData = {\n      googleId: user.uid,\n      userName: inputUserName\n    };\n    try {\n      const response = axios.post('https://wheeloffortune-68830.ue.r.appspot.com/api/UserInfo/saveUserInfo', postData);\n    } catch (error) {\n      console.error('Error posting data:', error);\n    }\n  }\n  ;\n\n  // Handles changes to the letter input\n  const handleInputChange = event => {\n    setInputLetter(event.target.value);\n  };\n\n  // Returns the current formatted time\n  const getCurrentFormattedTime = () => {\n    const now = new Date();\n    return `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-${String(now.getDate()).padStart(2, '0')}T${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}:${String(now.getSeconds()).padStart(2, '0')}`;\n  };\n\n  // Handles saving the game score\n  function handleSaveStore(event) {\n    event.preventDefault();\n    const currentTime = getCurrentFormattedTime();\n    const postData = {\n      googleId: user.uid,\n      date: currentTime,\n      score\n    };\n    axios.post('https://wheeloffortune-68830.ue.r.appspot.com/api/GameRecords/saveGameRecord', postData).then(response => {\n      if (response.data === 'success') {\n        console.log(\"Success!\");\n      } else {\n        console.log(\"Not success, the response is:\", response.data);\n      }\n    }).catch(error => {\n      console.error(\"Error:\", error.message);\n    });\n    setScore(0);\n    setShowScore(false);\n  }\n\n  // Handles canceling the score storing process\n  function handleCancelStore(event) {\n    event.preventDefault();\n    setScore(0);\n    setShowScore(false);\n  }\n\n  // Triggers the username change interface\n  function handleChangeUserName(event) {\n    event.preventDefault();\n    setShowChangeUserName(true);\n  }\n\n  // Submits the new user name\n  function handleChangeUserNameSubmit(event) {\n    event.preventDefault();\n    try {\n      const url = `https://wheeloffortune-68830.ue.r.appspot.com/api/UserInfo/updateUserName?googleId=${user.uid}&userName=${inputUserName}`;\n      const response = axios.post(url);\n      setShowChangeUserName(false);\n      setUserName(inputUserName);\n    } catch (error) {\n      console.error('Error posting data:', error);\n    }\n  }\n\n  // Decrypts the given string based on the user's guess\n  const decryptString = () => {\n    const isCorrectGuess = phrase.toLowerCase().includes(inputLetter.toLowerCase());\n    if (isCorrectGuess) {\n      const updatedHiddenPhrase = Array.from(hiddenPhrase); // Update displayed phrase\n      phrase.split('').forEach((char, index) => {\n        if (char.toLowerCase() === inputLetter.toLowerCase()) {\n          updatedHiddenPhrase[index] = char;\n        }\n      });\n      setHiddenPhrase(updatedHiddenPhrase.join(''));\n      if (!updatedHiddenPhrase.includes('*')) {\n        setCorrectGuess(true);\n      }\n    } else {\n      setChanceLeft(chanceLeft - 1);\n    }\n  };\n\n  // Handles the guess action and updates the game state accordingly\n  const handleGuess = () => {\n    if (chanceLeft <= 0 || correctGuess) {\n      const tmpPhrase = phrase.replace(/[a-zA-Z]/g, '*'); // Regular expression to hide letters\n      setHiddenPhrase(tmpPhrase);\n      setChanceLeft(5);\n      setCorrectGuess(false);\n    } else {\n      decryptString();\n    }\n    setInputLetter('');\n  };\n\n  // Effect hook to initialize the hidden phrase when the component mounts\n  useEffect(() => {\n    const tmpPhrase = phrase.replace(/[a-zA-Z]/g, '*'); // Replaces all letters with asterisks\n    setHiddenPhrase(tmpPhrase);\n  }, []); // Empty dependency array ensures this effect runs only once on mount\n\n  // Effect hook to fetch user information when the user state updates\n  useEffect(() => {\n    if (user) {\n      findUserInfoByGoogleId();\n    }\n  }, [user]); // Dependency array includes user, so this effect runs whenever user changes\n\n  // Effect hook to manage the score display based on the game state\n  useEffect(() => {\n    if (chanceLeft <= 0 || correctGuess) {\n      setScore(chanceLeft);\n      setShowScore(true);\n    }\n  }, [chanceLeft, correctGuess]); // Dependency array includes chanceLeft and correctGuess\n\n  // Effect hook to show/hide the username input based on user info\n  useEffect(() => {\n    if (first) {\n      if (userInfo && Array.isArray(userInfo) && userInfo.length === 0) {\n        setShowUserName(true);\n        setShowGame(false);\n      } else {\n        setShowUserName(false);\n        setShowGame(true);\n        setUserName(userInfo.map(item => item.userName));\n      }\n    }\n  }, [userInfo]); // Dependency array includes userInfo, so this effect runs whenever userInfo changes\n\n  // State hook for managing the visibility of the history score window\n  const [showHistoryScoreWindow, setShowHistoryScoreWindow] = useState(false);\n\n  // Toggles the visibility of the history score window\n  const handleShowHistoryScoreWindow = () => {\n    setShowHistoryScoreWindow(!showHistoryScoreWindow);\n  };\n\n  // Main component return function with conditional rendering based on state\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(LoginForm, {\n      LoginEvent: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), showUserName ? /*#__PURE__*/_jsxDEV(PopupWindow, {\n      labelName: \"input userName\",\n      onSubmit: handleUserNameSubmit,\n      inputValue: inputUserName,\n      onInputChange: e => setInputUserName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), showScore ? /*#__PURE__*/_jsxDEV(PopupScoreWindow, {\n      score: score,\n      onSave: handleSaveStore,\n      onCancel: handleCancelStore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), showGame ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"userName: \", userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleChangeUserName,\n          children: \"Change UserName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 9\n        }, this), showChangeUserName ? /*#__PURE__*/_jsxDEV(PopupWindow, {\n          labelName: \"input userName\",\n          onSubmit: handleChangeUserNameSubmit,\n          inputValue: inputUserName,\n          onInputChange: e => setInputUserName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Wheel Of Fortune\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hidden Phrase: \", hiddenPhrase]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Chance Left: \", chanceLeft]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"input a letter to guess\",\n          value: inputLetter,\n          onChange: handleInputChange,\n          maxLength: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }, this), chanceLeft <= 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sorry! You Lose!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 26\n        }, this), correctGuess && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Congratulations! You Win!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGuess,\n          children: \"Guess\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleShowHistoryScoreWindow,\n          children: showHistoryScoreWindow ? 'Hide History Score Window' : 'Show History Score Window'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 9\n        }, this), showHistoryScoreWindow && /*#__PURE__*/_jsxDEV(HistoryScoreWindow, {\n          googleId: user.uid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 7\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7mQmmDt1wfJs9jK2BOLmdkGiz4M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","useEffect","LoginForm","PopupWindow","PopupScoreWindow","HistoryScoreWindow","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","phrase","hiddenPhrase","setHiddenPhrase","inputLetter","setInputLetter","correctGuess","setCorrectGuess","chanceLeft","setChanceLeft","user","setUser","userInfo","setUserInfo","showGame","setShowGame","showUserName","setShowUserName","showChangeUserName","setShowChangeUserName","showScore","setShowScore","inputUserName","setInputUserName","userName","setUserName","score","setScore","first","setFirst","handleLogin","findUserInfoByGoogleId","url","uid","get","then","response","data","catch","error","handleUserNameSubmit","event","preventDefault","postData","googleId","post","console","handleInputChange","target","value","getCurrentFormattedTime","now","Date","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","handleSaveStore","currentTime","date","log","message","handleCancelStore","handleChangeUserName","handleChangeUserNameSubmit","decryptString","isCorrectGuess","toLowerCase","includes","updatedHiddenPhrase","Array","from","split","forEach","char","index","join","handleGuess","tmpPhrase","replace","isArray","length","map","item","showHistoryScoreWindow","setShowHistoryScoreWindow","handleShowHistoryScoreWindow","className","children","LoginEvent","fileName","_jsxFileName","lineNumber","columnNumber","labelName","onSubmit","inputValue","onInputChange","e","onSave","onCancel","onClick","src","alt","type","placeholder","onChange","maxLength","_c","$RefreshReg$"],"sources":["/root/wheel-of-fortune-fullstack-BianYi10/front/src/App.js"],"sourcesContent":["import logo from './wof.jpg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport LoginForm from './LoginForm';\nimport PopupWindow from './PopupWindow';\nimport PopupScoreWindow from './PopupScoreWindow';\nimport HistoryScoreWindow from './HistoryScoreWindow';\nimport axios from 'axios';\n\nfunction App() {\n  // Various state hooks for managing game and user data\n  const phrase = \"Have a great day\";\n  const [hiddenPhrase, setHiddenPhrase] = useState('');\n  const [inputLetter, setInputLetter] = useState('');\n  const [correctGuess, setCorrectGuess] = useState(false);\n  const [chanceLeft, setChanceLeft] = useState(5);\n  const [user, setUser] = useState(null);\n  const [userInfo, setUserInfo] = useState([]);\n  const [showGame, setShowGame] = useState(false);\n  const [showUserName, setShowUserName] = useState(false);\n  const [showChangeUserName, setShowChangeUserName] = useState(false);\n  const [showScore, setShowScore] = useState(false);\n  const [inputUserName, setInputUserName] = useState('');\n  const [userName, setUserName] = useState('');\n  const [score, setScore] = useState(0);\n  const [first, setFirst] = useState(false);\n\n  // Handles user login and sets the initial state\n  function handleLogin(user){\n      setUser(user);\n      setFirst(true);\n  }\n\n  // Fetches user information by their Google ID\n  function findUserInfoByGoogleId() {\n    const url = `https://wheeloffortune-68830.ue.r.appspot.com/api/UserInfo/findUserInfoByGoogleId?googleId=${user.uid}`;\n    axios.get(url)\n      .then(response => {\n        setUserInfo(response.data);\n      })\n      .catch(error => {\n        setShowUserName(true);\n        setShowGame(false);\n      });\n  };\n\n  // Handles submission of the user name\n  function handleUserNameSubmit(event) {\n    event.preventDefault();\n    const postData = {\n        googleId: user.uid,\n        userName: inputUserName\n    };\n    try {\n      const response = axios.post('https://wheeloffortune-68830.ue.r.appspot.com/api/UserInfo/saveUserInfo', postData);\n    } catch (error) {\n      console.error('Error posting data:', error);\n    }\n  };\n\n  // Handles changes to the letter input\n  const handleInputChange = (event) => {\n    setInputLetter(event.target.value);\n  };\n\n  // Returns the current formatted time\n  const getCurrentFormattedTime = () => {\n    const now = new Date();\n    return `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-${String(now.getDate()).padStart(2, '0')}T${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}:${String(now.getSeconds()).padStart(2, '0')}`;\n  };\n\n  // Handles saving the game score\n  function handleSaveStore(event) {\n    event.preventDefault();\n    const currentTime = getCurrentFormattedTime();\n    const postData = {\n        googleId: user.uid,\n        date: currentTime,\n        score\n    };\n\n    axios.post('https://wheeloffortune-68830.ue.r.appspot.com/api/GameRecords/saveGameRecord', postData)\n    .then(response => {\n      if (response.data === 'success') {\n        console.log(\"Success!\");\n      } else {\n        console.log(\"Not success, the response is:\", response.data);\n      }\n    })\n    .catch(error => {\n      console.error(\"Error:\", error.message);\n    });\n    \n    setScore(0);\n    setShowScore(false);\n  }\n\n  // Handles canceling the score storing process\n  function handleCancelStore(event) {\n    event.preventDefault();\n    setScore(0);\n    setShowScore(false);\n  }\n\n  // Triggers the username change interface\n  function handleChangeUserName(event) {\n    event.preventDefault();\n    setShowChangeUserName(true);\n  }\n\n  // Submits the new user name\n  function handleChangeUserNameSubmit(event) {\n    event.preventDefault();\n    try {\n      const url=`https://wheeloffortune-68830.ue.r.appspot.com/api/UserInfo/updateUserName?googleId=${user.uid}&userName=${inputUserName}`\n      const response = axios.post(url);\n      setShowChangeUserName(false);\n      setUserName(inputUserName);\n    } catch (error) {\n      console.error('Error posting data:', error);\n    }\n  }\n\n  // Decrypts the given string based on the user's guess\n  const decryptString = () => {\n    const isCorrectGuess = phrase.toLowerCase().includes(inputLetter.toLowerCase());\n    if (isCorrectGuess) {\n      const updatedHiddenPhrase = Array.from(hiddenPhrase); // Update displayed phrase\n      phrase.split('').forEach((char, index) => {\n      if (char.toLowerCase() === inputLetter.toLowerCase()) {\n          updatedHiddenPhrase[index] = char;\n      }\n      });\n\n      setHiddenPhrase(updatedHiddenPhrase.join(''));\n\n      if (!updatedHiddenPhrase.includes('*')) {\n       setCorrectGuess(true);\n      }\n    }\n    else{\n    setChanceLeft(chanceLeft-1);\n    }\n  };\n\n  // Handles the guess action and updates the game state accordingly\n  const handleGuess = () => {\n    if(chanceLeft<=0||correctGuess){\n      const tmpPhrase = phrase.replace(/[a-zA-Z]/g, '*'); // Regular expression to hide letters\n      setHiddenPhrase(tmpPhrase);\n      setChanceLeft(5);\n      setCorrectGuess(false);\n    }\n    else{\n      decryptString();\n    }\n    setInputLetter('');\n  };\n\n  // Effect hook to initialize the hidden phrase when the component mounts\n  useEffect(() => {\n    const tmpPhrase = phrase.replace(/[a-zA-Z]/g, '*'); // Replaces all letters with asterisks\n    setHiddenPhrase(tmpPhrase);\n  }, []); // Empty dependency array ensures this effect runs only once on mount\n  \n  // Effect hook to fetch user information when the user state updates\n  useEffect(() => {\n    if (user) {\n      findUserInfoByGoogleId();\n    }\n  }, [user]); // Dependency array includes user, so this effect runs whenever user changes\n  \n  // Effect hook to manage the score display based on the game state\n  useEffect(() => {\n    if (chanceLeft <= 0 || correctGuess) {\n        setScore(chanceLeft);\n        setShowScore(true);\n    }\n  }, [chanceLeft, correctGuess]); // Dependency array includes chanceLeft and correctGuess\n\n  // Effect hook to show/hide the username input based on user info\n  useEffect(() => {\n    if(first){\n      if (userInfo && Array.isArray(userInfo) && userInfo.length === 0) {\n        setShowUserName(true);\n        setShowGame(false);\n      } else {\n        setShowUserName(false);\n        setShowGame(true);\n        setUserName(userInfo.map(item => item.userName));\n      }\n    }\n  }, [userInfo]); // Dependency array includes userInfo, so this effect runs whenever userInfo changes\n\n  // State hook for managing the visibility of the history score window\n  const [showHistoryScoreWindow, setShowHistoryScoreWindow] = useState(false);\n\n  // Toggles the visibility of the history score window\n  const handleShowHistoryScoreWindow = () => {\n    setShowHistoryScoreWindow(!showHistoryScoreWindow);\n  };\n\n  // Main component return function with conditional rendering based on state\n  return (\n    <div className=\"App\">\n      <LoginForm LoginEvent={handleLogin}/>\n      {showUserName ? (\n        <PopupWindow\n          labelName=\"input userName\"\n          onSubmit={handleUserNameSubmit}\n          inputValue={inputUserName}\n          onInputChange={e => setInputUserName(e.target.value)}\n        />\n      ):<></>\n      }\n      {showScore ? (\n        <PopupScoreWindow\n        score={score} \n        onSave={handleSaveStore} \n        onCancel={handleCancelStore} \n        />\n      ):<></>\n      }\n\n      {showGame ? (\n        <>\n      <header className=\"App-header\">\n        <p>userName: {userName}</p>\n        <button onClick={handleChangeUserName}>Change UserName</button>\n        {showChangeUserName ? (\n          <PopupWindow\n            labelName=\"input userName\"\n            onSubmit={handleChangeUserNameSubmit}\n            inputValue={inputUserName}\n            onInputChange={e => setInputUserName(e.target.value)}\n          />\n        ):<></>\n        }\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>Wheel Of Fortune</h1>\n        <p>Hidden Phrase: {hiddenPhrase}</p>\n        <p>Chance Left: {chanceLeft}</p>\n\n        <input\n          type=\"text\"\n          placeholder=\"input a letter to guess\"\n          value={inputLetter} \n          onChange={handleInputChange} \n          maxLength={1}\n        />\n        {chanceLeft<=0&& <p>Sorry! You Lose!</p>}\n        {correctGuess && <p>Congratulations! You Win!</p>}\n        <button onClick={handleGuess}>Guess</button>\n        <button onClick={handleShowHistoryScoreWindow}>\n          {showHistoryScoreWindow ? 'Hide History Score Window' : 'Show History Score Window'}\n          </button>\n        {showHistoryScoreWindow && <HistoryScoreWindow googleId={user.uid}/>}\n      </header>\n      </>\n        ):<></>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}