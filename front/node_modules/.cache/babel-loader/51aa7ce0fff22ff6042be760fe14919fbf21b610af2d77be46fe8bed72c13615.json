{"ast":null,"code":"var _jsxFileName = \"/root/wheeloffortune/src/HistoryScoreWindow.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HistoryScoreWindow = user => {\n  _s();\n  const [historyScores, setHistoryScores] = useState([]); // 示例历史分数\n  const [allPlayerScores, setAllPlayerScores] = useState([]); // 示例所有玩家分数\n  const [loading, setLoading] = useState(true);\n\n  // 分页相关的状态定义\n  const [currentPage, setCurrentPage] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n  const [paginatedScores, setPaginatedScores] = useState([]);\n  // 历史分数的分页状态\n  const [currentHistoryPage, setCurrentHistoryPage] = useState(0);\n  const [paginatedHistoryScores, setPaginatedHistoryScores] = useState([]);\n\n  // 所有玩家分数的分页状态\n  const [currentAllPlayerPage, setCurrentAllPlayerPage] = useState(0);\n  const [paginatedAllPlayerScores, setPaginatedAllPlayerScores] = useState([]);\n  const [hasNextPage, setHasNextPage] = useState(false);\n  const handleDeleteScore = (index, id) => {\n    console.log(\"id= \", id);\n    const url = `https://wheeloffortune-68830.ue.r.appspot.com/api/GameRecords/removeGameRecordById?id=${id}`;\n    console.log(url);\n    const response = axios.post(url).then(response => {\n      console.log(\"response.data= \", response.data);\n      setHistoryScores(prevScores => prevScores.filter((_, i) => i !== index));\n    }).catch(error => {\n      console.log(\"error.message= \", error.message);\n    });\n  };\n  function findGameRecordsByGoogleId() {\n    console.log(\"googleId= \", user.googleId);\n    const url = `https://wheeloffortune-68830.ue.r.appspot.com/api/GameRecords/findGameRecordsByGoogleId?googleId=${user.googleId}`;\n    console.log(url);\n    axios.get(url).then(response => {\n      console.log(\"response.data= \", response.data);\n      setHistoryScores(response.data);\n      paginateHistoryData(response.data, 0);\n      //const fullList = response.data; // 假设这里是您获取的完整列表\n      //paginateData(fullList);\n    }).catch(error => {\n      console.log(\"error.message= \", error.message);\n    });\n  }\n  ;\n\n  //const fetchData = async () => {\n  const fetchData = async (page = 0) => {\n    try {\n      //const url = `https://wheeloffortune-68830.ue.r.appspot.com/api/GameRecords/findGameRecordsOrderByScoreDesc`;\n      const url = `https://wheeloffortune-68830.ue.r.appspot.com/api/GameRecords/findGameRecordsOrderByScoreDesc?page=${page}&size=${pageSize}`;\n      console.log(url);\n      const response = await axios.get(url);\n      const records = response.data.content;\n      const data = response.data;\n      //setAllPlayerScores(response.data.content); // 设置所有玩家分数\n      //paginateAllPlayerData(response.data.content, page); // 分页所有玩家分数\n      setPaginatedAllPlayerScores(records); // 直接设置为从后端获取的当前页数据\n      setAllPlayerScores(data.content);\n      setHasNextPage(data.hasNextPage); // 假设响应中有 hasNextPage 字段\n\n      // 获取与每个游戏记录关联的用户信息\n      const recordsWithUserInfo = await Promise.all(records.map(async record => {\n        const userInfoResponse = await axios.get(`https://wheeloffortune-68830.ue.r.appspot.com/api/UserInfo/findUserInfoByGoogleId?googleId=${record.googleId}`);\n        console.log(\"userInfoResponse is \", userInfoResponse);\n        console.log(\"userInfoResponse.data.userName is \", userInfoResponse.data.userName);\n        return {\n          ...record,\n          userName: userInfoResponse.data[0].userName // 假设返回的用户信息中有 'userName' 字段\n        };\n      }));\n\n      setAllPlayerScores(recordsWithUserInfo);\n    } catch (error) {\n      console.error(\"Error fetching data: \", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 处理页码更改\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n    findGameRecordsByGoogleId(newPage); // 更新该函数以接受页码作为参数\n    fetchData(newPage); // 更新该函数以接受页码作为参数\n    findGameRecordsByGoogleId();\n  };\n\n  // 实现分页逻辑\n  function paginateData(fullList) {\n    const startIndex = currentPage * pageSize;\n    const paginatedList = fullList.slice(startIndex, startIndex + pageSize);\n    setPaginatedScores(paginatedList);\n  }\n\n  // 处理历史分数页码更改\n  const handleHistoryPageChange = newPage => {\n    setCurrentHistoryPage(newPage);\n    paginateHistoryData(historyScores, newPage);\n  };\n\n  // 处理所有玩家分数页码更改\n  const handleAllPlayerPageChange = newPage => {\n    setCurrentAllPlayerPage(newPage);\n    fetchData(newPage); // fetchData 函数应更新为使用 currentAllPlayerPage\n  };\n\n  // 实现历史分数的分页逻辑\n  function paginateHistoryData(fullList, page) {\n    const startIndex = page * pageSize;\n    const paginatedList = fullList.slice(startIndex, startIndex + pageSize);\n    setPaginatedHistoryScores(paginatedList);\n  }\n  const paginateAllPlayerData = (fullList, page) => {\n    const startIndex = page * pageSize; // 计算当前页的起始索引\n    const paginatedList = fullList.slice(startIndex, startIndex + pageSize); // 获取当前页的数据\n    setPaginatedAllPlayerScores(paginatedList); // 更新状态以显示当前页的数据\n  };\n\n  useEffect(() => {\n    findGameRecordsByGoogleId();\n    //fetchData();\n    fetchData(0); // 加载第一页\n    //handlePageChange(0);\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"History Scores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: paginatedHistoryScores.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Date:\", item.date, \" Score:\", item.score, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteScore(index, item.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 73\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleHistoryPageChange(currentHistoryPage - 1),\n        disabled: currentHistoryPage === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentHistoryPage + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleHistoryPageChange(currentHistoryPage + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Player Scores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: paginatedAllPlayerScores.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"UserName:\", item.userName, \" Date:\", item.date, \" Score:\", item.score]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAllPlayerPageChange(currentAllPlayerPage - 1),\n        disabled: currentAllPlayerPage === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentAllPlayerPage + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAllPlayerPageChange(currentAllPlayerPage + 1),\n        disabled: !hasNextPage,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n_s(HistoryScoreWindow, \"zI2b9J/m7gfFoVaFKbwB41DEj0s=\");\n_c = HistoryScoreWindow;\nexport default HistoryScoreWindow;\nvar _c;\n$RefreshReg$(_c, \"HistoryScoreWindow\");","map":{"version":3,"names":["axios","React","useState","useEffect","jsxDEV","_jsxDEV","HistoryScoreWindow","user","_s","historyScores","setHistoryScores","allPlayerScores","setAllPlayerScores","loading","setLoading","currentPage","setCurrentPage","pageSize","setPageSize","paginatedScores","setPaginatedScores","currentHistoryPage","setCurrentHistoryPage","paginatedHistoryScores","setPaginatedHistoryScores","currentAllPlayerPage","setCurrentAllPlayerPage","paginatedAllPlayerScores","setPaginatedAllPlayerScores","hasNextPage","setHasNextPage","handleDeleteScore","index","id","console","log","url","response","post","then","data","prevScores","filter","_","i","catch","error","message","findGameRecordsByGoogleId","googleId","get","paginateHistoryData","fetchData","page","records","content","recordsWithUserInfo","Promise","all","map","record","userInfoResponse","userName","handlePageChange","newPage","paginateData","fullList","startIndex","paginatedList","slice","handleHistoryPageChange","handleAllPlayerPageChange","paginateAllPlayerData","children","fileName","_jsxFileName","lineNumber","columnNumber","item","date","score","onClick","disabled","_c","$RefreshReg$"],"sources":["/root/wheeloffortune/src/HistoryScoreWindow.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\n\nconst HistoryScoreWindow = (user) => {\n    const [historyScores, setHistoryScores] = useState([]); // 示例历史分数\n    const [allPlayerScores, setAllPlayerScores] = useState([]); // 示例所有玩家分数\n    const [loading, setLoading] = useState(true);\n\n    // 分页相关的状态定义\n    const [currentPage, setCurrentPage] = useState(0);\n    const [pageSize, setPageSize] = useState(10);\n    const [paginatedScores, setPaginatedScores] = useState([]);\n    // 历史分数的分页状态\n    const [currentHistoryPage, setCurrentHistoryPage] = useState(0);\n    const [paginatedHistoryScores, setPaginatedHistoryScores] = useState([]);\n\n    // 所有玩家分数的分页状态\n    const [currentAllPlayerPage, setCurrentAllPlayerPage] = useState(0);\n    const [paginatedAllPlayerScores, setPaginatedAllPlayerScores] = useState([]);\n\n    const [hasNextPage, setHasNextPage] = useState(false);\n\n    const handleDeleteScore = (index,id) => {\n        console.log(\"id= \",id);\n        const url=`https://wheeloffortune-68830.ue.r.appspot.com/api/GameRecords/removeGameRecordById?id=${id}`;\n        console.log(url);\n        const response = axios.post(url)\n        .then(response => {\n            console.log(\"response.data= \",response.data);\n            setHistoryScores(prevScores => prevScores.filter((_, i) => i !== index));\n        })\n        .catch(error => {\n            console.log(\"error.message= \",error.message);\n        });\n    };\n\n    function findGameRecordsByGoogleId() {\n        console.log(\"googleId= \",user.googleId);\n        const url = `https://wheeloffortune-68830.ue.r.appspot.com/api/GameRecords/findGameRecordsByGoogleId?googleId=${user.googleId}`;\n        console.log(url);\n        axios.get(url)\n          .then(response => {\n            console.log(\"response.data= \",response.data);\n            setHistoryScores(response.data);\n\n            paginateHistoryData(response.data, 0);\n            //const fullList = response.data; // 假设这里是您获取的完整列表\n            //paginateData(fullList);\n          })\n          .catch(error => {\n            console.log(\"error.message= \",error.message);\n          });\n    };\n\n    //const fetchData = async () => {\n    const fetchData = async (page = 0) => {\n        try {\n            //const url = `https://wheeloffortune-68830.ue.r.appspot.com/api/GameRecords/findGameRecordsOrderByScoreDesc`;\n            const url = `https://wheeloffortune-68830.ue.r.appspot.com/api/GameRecords/findGameRecordsOrderByScoreDesc?page=${page}&size=${pageSize}`;\n            console.log(url);\n            const response = await axios.get(url);\n            const records = response.data.content;\n            const data = response.data;\n            //setAllPlayerScores(response.data.content); // 设置所有玩家分数\n            //paginateAllPlayerData(response.data.content, page); // 分页所有玩家分数\n            setPaginatedAllPlayerScores(records);// 直接设置为从后端获取的当前页数据\n            setAllPlayerScores(data.content);\n            setHasNextPage(data.hasNextPage); // 假设响应中有 hasNextPage 字段\n\n            // 获取与每个游戏记录关联的用户信息\n            const recordsWithUserInfo = await Promise.all(records.map(async record => {\n                const userInfoResponse = await axios.get(`https://wheeloffortune-68830.ue.r.appspot.com/api/UserInfo/findUserInfoByGoogleId?googleId=${record.googleId}`);\n                console.log(\"userInfoResponse is \",userInfoResponse);\n                console.log(\"userInfoResponse.data.userName is \",userInfoResponse.data.userName);\n                return {\n                    ...record,\n                    userName: userInfoResponse.data[0].userName // 假设返回的用户信息中有 'userName' 字段\n                };\n            }));\n\n            setAllPlayerScores(recordsWithUserInfo);\n        } catch (error) {\n            console.error(\"Error fetching data: \", error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // 处理页码更改\n    const handlePageChange = (newPage) => {\n        setCurrentPage(newPage);\n        findGameRecordsByGoogleId(newPage); // 更新该函数以接受页码作为参数\n        fetchData(newPage); // 更新该函数以接受页码作为参数\n        findGameRecordsByGoogleId();\n    };\n\n    // 实现分页逻辑\n    function paginateData(fullList) {\n        const startIndex = currentPage * pageSize;\n        const paginatedList = fullList.slice(startIndex, startIndex + pageSize);\n        setPaginatedScores(paginatedList);\n    }\n\n    // 处理历史分数页码更改\n    const handleHistoryPageChange = (newPage) => {\n        setCurrentHistoryPage(newPage);\n        paginateHistoryData(historyScores, newPage);\n    };\n\n    // 处理所有玩家分数页码更改\n    const handleAllPlayerPageChange = (newPage) => {\n        setCurrentAllPlayerPage(newPage);\n        fetchData(newPage); // fetchData 函数应更新为使用 currentAllPlayerPage\n    };\n\n    // 实现历史分数的分页逻辑\n    function paginateHistoryData(fullList, page) {\n        const startIndex = page * pageSize;\n        const paginatedList = fullList.slice(startIndex, startIndex + pageSize);\n        setPaginatedHistoryScores(paginatedList);\n    }\n\n    const paginateAllPlayerData = (fullList, page) => {\n        const startIndex = page * pageSize; // 计算当前页的起始索引\n        const paginatedList = fullList.slice(startIndex, startIndex + pageSize); // 获取当前页的数据\n        setPaginatedAllPlayerScores(paginatedList); // 更新状态以显示当前页的数据\n    };\n    \n\n    useEffect(() => {\n        findGameRecordsByGoogleId();\n        //fetchData();\n        fetchData(0);// 加载第一页\n        //handlePageChange(0);\n        \n    }, []);\n\n    if (loading) {\n        return <p>Loading...</p>;\n    }\n\n    return (\n        <div>\n            <h2>History Scores</h2>\n            <ul>\n                {paginatedHistoryScores.map((item, index) => (\n                    <li key={index}>Date:{item.date} Score:{item.score} <button onClick={() => handleDeleteScore(index,item.id)}>Delete</button></li>\n                ))}\n            </ul>\n            <div>\n                <button onClick={() => handleHistoryPageChange(currentHistoryPage - 1)} disabled={currentHistoryPage === 0}>Previous</button>\n                <span>Page {currentHistoryPage + 1}</span>\n                <button onClick={() => handleHistoryPageChange(currentHistoryPage + 1)}>Next</button>\n            </div>\n\n            <h2>All Player Scores</h2>\n            <ul>\n                {paginatedAllPlayerScores.map((item, index) => (\n                    <li key={index}>UserName:{item.userName} Date:{item.date} Score:{item.score}</li>\n                ))}\n            </ul>\n            <div>\n                <button onClick={() => handleAllPlayerPageChange(currentAllPlayerPage - 1)} disabled={currentAllPlayerPage === 0}>Previous</button>\n                <span>Page {currentAllPlayerPage + 1}</span>\n                <button onClick={() => handleAllPlayerPageChange(currentAllPlayerPage + 1)} disabled={!hasNextPage}>Next</button>\n            </div>\n        </div>\n    );\n};\n\nexport default HistoryScoreWindow;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}