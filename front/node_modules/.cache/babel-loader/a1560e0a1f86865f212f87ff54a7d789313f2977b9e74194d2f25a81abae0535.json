{"ast":null,"code":"var _jsxFileName = \"/root/react-gcp-app-engine/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './wof.jpg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const phrase = \"Have a great day\";\n  const [hiddenPhrase, setHiddenPhrase] = useState('');\n  const [inputLetter, setInputLetter] = useState('');\n  const [correctGuess, setCorrectGuess] = useState(false);\n  const [chanceLeft, setChanceLeft] = useState(2);\n  const handleInputChange = event => {\n    setInputLetter(event.target.value);\n  };\n  const decryptString = () => {\n    const isCorrectGuess = phrase.toLowerCase().includes(inputLetter.toLowerCase());\n    if (isCorrectGuess) {\n      const updatedHiddenPhrase = Array.from(hiddenPhrase); // Update displayed phrase\n      phrase.split('').forEach((char, index) => {\n        if (char.toLowerCase() === inputLetter.toLowerCase()) {\n          updatedHiddenPhrase[index] = char;\n        }\n      });\n      setHiddenPhrase(updatedHiddenPhrase.join(''));\n      if (!updatedHiddenPhrase.includes('*')) {\n        setCorrectGuess(true);\n      }\n    } else {\n      setChanceLeft(chanceLeft - 1);\n    }\n  };\n  const handleGuess = () => {\n    console.log(hiddenPhrase);\n    console.log(phrase);\n    console.log(inputLetter);\n    decryptString();\n    console.log(hiddenPhrase);\n    setInputLetter('');\n  };\n  useEffect(() => {\n    // 在组件挂载时将 phrase 变为 hiddenPhrase\n    const tmpPhrase = phrase.replace(/[a-zA-Z]/g, '*');\n    setHiddenPhrase(tmpPhrase);\n  }, []); // 空数组表示只在组件挂载时执行一次\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wheel Of Fortune\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hidden Phrase: \", hiddenPhrase]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Chance Left: \", chanceLeft]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"input a letter to guess\",\n        value: inputLetter,\n        onChange: handleInputChange,\n        maxLength: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), chanceLeft <= 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sorry! You Lose!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 26\n      }, this), correctGuess && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Congratulations! You Win!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGuess,\n        children: \"Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"J2dFBzdNWQTFCvZLkcjXhaNfEq4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","phrase","hiddenPhrase","setHiddenPhrase","inputLetter","setInputLetter","correctGuess","setCorrectGuess","chanceLeft","setChanceLeft","handleInputChange","event","target","value","decryptString","isCorrectGuess","toLowerCase","includes","updatedHiddenPhrase","Array","from","split","forEach","char","index","join","handleGuess","console","log","tmpPhrase","replace","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","maxLength","onClick","_c","$RefreshReg$"],"sources":["/root/react-gcp-app-engine/src/App.js"],"sourcesContent":["import logo from './wof.jpg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const phrase = \"Have a great day\";\n  const [hiddenPhrase, setHiddenPhrase] = useState('');\n  const [inputLetter, setInputLetter] = useState('');\n  const [correctGuess, setCorrectGuess] = useState(false);\n  const [chanceLeft, setChanceLeft] = useState(2);\n\n  const handleInputChange = (event) => {\n    setInputLetter(event.target.value);\n  };\n\n  const decryptString = () => {\n    const isCorrectGuess = phrase.toLowerCase().includes(inputLetter.toLowerCase());\n    if (isCorrectGuess) {\n      const updatedHiddenPhrase = Array.from(hiddenPhrase); // Update displayed phrase\n      phrase.split('').forEach((char, index) => {\n        if (char.toLowerCase() === inputLetter.toLowerCase()) {\n          updatedHiddenPhrase[index] = char;\n        }\n      });\n\n      setHiddenPhrase(updatedHiddenPhrase.join(''));\n\n      if (!updatedHiddenPhrase.includes('*')) {\n        setCorrectGuess(true);\n      }\n    }\n    else{\n      setChanceLeft(chanceLeft-1);\n    }\n  };\n\n\n  const handleGuess = () => {\n    console.log(hiddenPhrase);\n    console.log(phrase);\n    console.log(inputLetter);\n    decryptString();\n    console.log(hiddenPhrase);\n    setInputLetter('');\n  };\n\n  useEffect(() => {\n    // 在组件挂载时将 phrase 变为 hiddenPhrase\n    const tmpPhrase= phrase.replace(/[a-zA-Z]/g, '*');\n    setHiddenPhrase(tmpPhrase);\n  }, []); // 空数组表示只在组件挂载时执行一次\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>Wheel Of Fortune</h1>\n        <p>Hidden Phrase: {hiddenPhrase}</p>\n        <p>Chance Left: {chanceLeft}</p>\n        <input\n          type=\"text\"\n          placeholder=\"input a letter to guess\"\n          value={inputLetter} \n          onChange={handleInputChange} \n          maxLength={1}\n        />\n        {chanceLeft<=0&& <p>Sorry! You Lose!</p>}\n        {correctGuess && <p>Congratulations! You Win!</p>}\n        <button onClick={handleGuess}>Guess</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}