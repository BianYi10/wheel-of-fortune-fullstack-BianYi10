{"ast":null,"code":"var _jsxFileName = \"/root/wheeloffortune/src/LoginForm.js\",\n  _s = $RefreshSig$();\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, GoogleAuthProvider } from 'firebase/auth';\nimport React, { useState, useEffect } from 'react';\n\n// LoginSuccessful is a function sent in by parent component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginForm({\n  LoginEvent\n}) {\n  _s();\n  const firebaseConfig = {\n    apiKey: \"AIzaSyAiiIFGKInGBEjqphGCn67xdtiX4WRC1UA\",\n    authDomain: \"wheeloffortune-bank-end.firebaseapp.com\",\n    projectId: \"wheeloffortune-bank-end\",\n    storageBucket: \"wheeloffortune-bank-end.appspot.com\",\n    messagingSenderId: \"75196970673\",\n    appId: \"1:75196970673:web:c4451f9f213f9c77d21490\",\n    measurementId: \"G-5732CPLTQW\"\n  };\n  initializeApp(firebaseConfig);\n  const [loggedUser, setLoggedUser] = useState('');\n\n  // function to sign in with Google's page\n  const signInWithGoogle = () => {\n    const provider = new GoogleAuthProvider();\n    const auth = getAuth();\n    signInWithRedirect(auth, provider).then(result => {\n      // User signed in\n      console.log(result.user);\n      setLoggedUser(result.user);\n    }).catch(error => {\n      // Handle Errors here.\n      console.error(error);\n    });\n  };\n\n  // function to sign out\n  function logoutGoogle() {\n    const auth = getAuth();\n    auth.signOut();\n    setLoggedUser(null);\n  }\n\n  // we put the onAuthStateChanged in useEffect so this is only called when \n  // this component mounts  \n  useEffect(() => {\n    const auth = getAuth();\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        // User is signed in.\n        console.log(\"User is signed in:\", user);\n        setLoggedUser(user);\n      } else {\n        // No user is signed in.\n        console.log(\"No user is signed in.\");\n      }\n      LoginEvent(user);\n    });\n  }, []);\n  // note the ? to show either login or logout button\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loggedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"user: \", loggedUser.uid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logoutGoogle,\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 39\n      }, this), \" \"]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: signInWithGoogle,\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"2o6JLLmlnAKXzbP/P0OnaBoUKaw=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","GoogleAuthProvider","React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","LoginEvent","_s","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","loggedUser","setLoggedUser","signInWithGoogle","provider","auth","then","result","console","log","user","catch","error","logoutGoogle","signOut","onAuthStateChanged","children","uid","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/root/wheeloffortune/src/LoginForm.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, GoogleAuthProvider } from 'firebase/auth';\nimport React, {  useState, useEffect } from 'react';\n\n// LoginSuccessful is a function sent in by parent component\nfunction LoginForm({LoginEvent}) {\n    const firebaseConfig = {\n\t\tapiKey: \"AIzaSyAiiIFGKInGBEjqphGCn67xdtiX4WRC1UA\",\n\t\tauthDomain: \"wheeloffortune-bank-end.firebaseapp.com\",\n\t\tprojectId: \"wheeloffortune-bank-end\",\n\t\tstorageBucket: \"wheeloffortune-bank-end.appspot.com\",\n\t\tmessagingSenderId: \"75196970673\",\n\t\tappId: \"1:75196970673:web:c4451f9f213f9c77d21490\",\n\t\tmeasurementId: \"G-5732CPLTQW\"\n\t};\n\n\tinitializeApp(firebaseConfig);\n\t\n\tconst [loggedUser, setLoggedUser] = useState('');\n\n\t// function to sign in with Google's page\n\tconst signInWithGoogle = () => {\n  \t\n  \t\tconst provider = new GoogleAuthProvider();\n  \t\tconst auth = getAuth();\n  \t\tsignInWithRedirect(auth, provider)\n    \t.then((result) => {\n      \t\t// User signed in\n      \t\tconsole.log(result.user);\n      \t\tsetLoggedUser(result.user)\n      \t\n    \t}).catch((error) => {\n      \t// Handle Errors here.\n      \t\tconsole.error(error);\n    \t});\n\t};\n\t\n\t// function to sign out\n\tfunction logoutGoogle () {\n\t\tconst auth=getAuth();\n\t\tauth.signOut();\n\t\tsetLoggedUser(null)\n\t}\n\n\t// we put the onAuthStateChanged in useEffect so this is only called when \n\t// this component mounts  \n\tuseEffect(() => {\n\t\tconst auth = getAuth();\n\t\tauth.onAuthStateChanged(user => {\n\t\t\tif (user) {\n    \t\t\t// User is signed in.\n    \t\t\tconsole.log(\"User is signed in:\", user);\n    \t\t\t\n    \t\t\t\n    \t\t\tsetLoggedUser(user);\n    \t\t\n  \t\t\t} else {\n    \t\t// No user is signed in.\n    \t\t\tconsole.log(\"No user is signed in.\");\n  \t\t\t}\n  \t\t\tLoginEvent(user);\n  \t\t});\n\t}, []);\n\t// note the ? to show either login or logout button\n\treturn (\n    <div >\n    { loggedUser?\n      <><p>user: {loggedUser.uid}</p> <button onClick={logoutGoogle}>Log out</button> </>\n      :<button onClick={signInWithGoogle}>Sign in with Google</button>\n    } \n     \n    </div>\n  );\n\n}\nexport default LoginForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}